<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Task</name>
    </assembly>
    <members>
        <member name="T:Task.Common.AutoMapperProfile">
            <summary>
            AutoMapper profile
            </summary>
        </member>
        <member name="M:Task.Common.AutoMapperProfile.#ctor">
            <summary>
            Profile
            </summary>
        </member>
        <member name="T:Task.Common.ConfigurationManager">
            <summary>
            Configuration Manager
            </summary>
        </member>
        <member name="P:Task.Common.ConfigurationManager.AppSetting">
            <summary>
            App Setting
            </summary>
        </member>
        <member name="M:Task.Common.ConfigurationManager.#cctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="T:Task.Common.IScopeDependency">
            <summary>
            ScopeDependancy Markup
            </summary>
        </member>
        <member name="T:Task.Common.ISingletoneDependency">
            <summary>
            SingletoneDependany Markup
            </summary>
        </member>
        <member name="T:Task.Common.ITransientDependency">
            <summary>
            TransientDependancy Markup
            </summary>
        </member>
        <member name="T:Task.Controllers.AddressController">
            <summary>
            Address Controller
            </summary>
        </member>
        <member name="P:Task.Controllers.AddressController._addressService">
            <summary>
            Address service
            </summary>
        </member>
        <member name="F:Task.Controllers.AddressController._logger">
            <summary>
            Logger Service
            </summary>
        </member>
        <member name="M:Task.Controllers.AddressController.#ctor(Microsoft.Extensions.Logging.ILogger{Task.Controllers.AddressController},Task.Services.IAddressService)">
            <summary>
            Address controller constructor
            </summary>
            <param name="logger">Injected logger</param>
            <param name="addressService">Injected addressService</param>
        </member>
        <member name="M:Task.Controllers.AddressController.Get">
            <summary>
            Get Address
            </summary>
            <returns>List of Address</returns>
        </member>
        <member name="M:Task.Controllers.AddressController.GetAddress(System.Int32)">
             <summary>
             Get Address
             </summary>
             <param name="id">id of Address</param>
             <returns>Address item</returns>
             /// <remarks>
             Sample request:
            
                 Get /GetAddress:{Id}
            
             </remarks>
             <response code="200">Returns if everything is ok</response>
             <response code="400">If the item is null</response>
        </member>
        <member name="M:Task.Controllers.AddressController.GetAddressV2(System.Int32)">
             <summary>
              Get Address for version 2 of api
             </summary>
             <param name="id">id of Address</param>
             <returns>Address</returns>
             /// <remarks>
             Sample request:
            
                 Get /Address:{Id}
            
             </remarks>
             <response code="200">Returns if everything is ok</response>
             <response code="404">If the item is null</response>
        </member>
        <member name="M:Task.Controllers.AddressController.InsertAddress(System.String,System.String,System.String,System.String)">
            <summary>
            Inserts new Address
            </summary>
            <param name="street">Street</param>
            <param name="number">Number</param>
            <param name="zipCode">Zipcode</param>
            <param name="city">City</param>
            <returns>Inserted Address</returns>
        </member>
        <member name="M:Task.Controllers.AddressController.UpdateAddress(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Update Address
            </summary>
            <param name="id">Id of Address</param>
            <param name="street">Street</param>
            <param name="number">Number</param>
            <param name="zipCode">Zipcode</param>
            <param name="city">City</param>
            <returns>Inserted Address</returns>
        </member>
        <member name="M:Task.Controllers.AddressController.DeleteAddress(System.Int32)">
            <summary>
            Delete Address
            </summary>
            <param name="id">Id of Address</param>
            <returns>Inserted Address</returns>
        </member>
        <member name="T:Task.Controllers.AuthenticationController">
            <summary>
            Authentication Controller
            </summary>
        </member>
        <member name="P:Task.Controllers.AuthenticationController._userService">
            <summary>
            User service
            </summary>
        </member>
        <member name="F:Task.Controllers.AuthenticationController._logger">
            <summary>
            Logger Service
            </summary>
        </member>
        <member name="M:Task.Controllers.AuthenticationController.#ctor(Microsoft.Extensions.Logging.ILogger{Task.Controllers.HotelController},Task.Services.IUserService)">
            <summary>
            Authentication controller constructor
            </summary>
            <param name="logger">Injected logger</param>
            <param name="userService">Injected userService</param>
        </member>
        <member name="M:Task.Controllers.AuthenticationController.Login(BusinessLayer.Models.Authorization.LoginModel)">
            <summary>
            Login user
            </summary>
            <param name="user">User</param>
            <returns>Authentication Token</returns>
        </member>
        <member name="T:Task.Controllers.HotelController">
            <summary>
            Hotel Controller
            </summary>
        </member>
        <member name="P:Task.Controllers.HotelController._hotelsService">
            <summary>
            Hotel service
            </summary>
        </member>
        <member name="F:Task.Controllers.HotelController._logger">
            <summary>
            Logger Service
            </summary>
        </member>
        <member name="M:Task.Controllers.HotelController.#ctor(Microsoft.Extensions.Logging.ILogger{Task.Controllers.HotelController},Task.Services.IHotelsService)">
            <summary>
            Hotel controller constructor
            </summary>
            <param name="logger">Injected logger</param>
            <param name="hotelsService">Injected hotelsService</param>
        </member>
        <member name="M:Task.Controllers.HotelController.Get(System.Double,System.Double)">
            <summary>
            Get Hotels
            </summary>
            <returns>List of hotels</returns>
            <param name="longitude">longitude</param>
            <param name="latitude">latitude</param>
        </member>
        <member name="M:Task.Controllers.HotelController.GetHotel(System.Int32)">
             <summary>
             Get Hotel
             </summary>
             <param name="id">id of hotel</param>
             <returns>Hotel item</returns>
             /// <remarks>
             Sample request:
            
                 Get /GetHotel:{Id}
            
             </remarks>
             <response code="200">Returns if everything is ok</response>
             <response code="400">If the item is null</response>
        </member>
        <member name="M:Task.Controllers.HotelController.GetHotelV2(System.Int32)">
             <summary>
              Get Hotel for version 2 of api
             </summary>
             <param name="id">id of hotel</param>
             <returns>Hotel</returns>
             /// <remarks>
             Sample request:
            
                 Get /GetHotel:{Id}
            
             </remarks>
             <response code="200">Returns if everything is ok</response>
             <response code="404">If the item is null</response>
        </member>
        <member name="M:Task.Controllers.HotelController.InsertHotel(System.String,System.Double,System.Double,System.Double,System.Nullable{System.Int32})">
            <summary>
            Inserts new hotel
            </summary>
            <param name="name">Name of the hotel</param>
            <param name="price">Hotel price</param>
            <param name="longitude">Longitude</param>
            <param name="latitude">Latitude</param>
            <param name="addressId">Id of address</param>
            <returns>Inserted Hotel</returns>
        </member>
        <member name="M:Task.Controllers.HotelController.UpdateHotel(System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32},System.Int32)">
            <summary>
            Update hotel
            </summary>
            <param name="name">Name of the hotel</param>
            <param name="price">Hotel price</param>
            <param name="longitude">Longitude</param>
            <param name="latitude">Latitude</param>
            <param name="addressId">Id of address</param>
            <param name="id">Id of hotel</param>
            <returns>Inserted Hotel</returns>
        </member>
        <member name="M:Task.Controllers.HotelController.DeleteHotel(System.Int32)">
            <summary>
            Delete hotel
            </summary>
            <param name="id">Id of hotel</param>
            <returns>Inserted Hotel</returns>
        </member>
        <member name="T:Task.Services.AddressService">
            <summary>
            Address service
            </summary>
        </member>
        <member name="F:Task.Services.AddressService._context">
            <summary>
            Injected context
            </summary>
        </member>
        <member name="F:Task.Services.AddressService._mapper">
            <summary>
            Injected mapper
            </summary>
        </member>
        <member name="M:Task.Services.AddressService.#ctor(BusinessLayer.DataContext,AutoMapper.IMapper)">
            <summary>
            Address service consturctor
            </summary>
            <param name="context">Injected context service</param>
            <param name="mapper">Injected mapper</param>
        </member>
        <member name="M:Task.Services.AddressService.GetAddress">
            <summary>
            Gets Addresses
            </summary>
            <returns>Addresses items</returns>
        </member>
        <member name="M:Task.Services.AddressService.GetAddress(System.Int32)">
            <summary>
            Gets Address
            </summary>
            <param name="id">Address Id</param>
            <returns>Address item</returns>
        </member>
        <member name="M:Task.Services.AddressService.InsertAddressItem(System.String,System.String,System.String,System.String)">
            <summary>
            Inserts new Address in table
            </summary>
            <param name="street">Street</param>
            <param name="number">Number</param>
            <param name="zipCode">Zipcode</param>
            <param name="city">City</param>
            <returns>Inserted Address</returns>
        </member>
        <member name="M:Task.Services.AddressService.UpdateAddresItem(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Update addresss in table
            </summary>
            <param name="id">address Id</param>
            <param name="street">Street</param>
            <param name="number">Number</param>
            <param name="zipCode">Zipcode</param>
            <param name="city">City</param>
            <returns>Updated address item</returns>
        </member>
        <member name="M:Task.Services.AddressService.DeleteAddressItem(System.Int32)">
            <summary>
            Delete address in table
            </summary>
            <param name="id">address Id</param>
            <returns>Data weather action is successful</returns>
        </member>
        <member name="T:Task.Services.HotelsService">
            <summary>
            Hotels service
            </summary>
        </member>
        <member name="F:Task.Services.HotelsService._context">
            <summary>
            Injected context
            </summary>
        </member>
        <member name="F:Task.Services.HotelsService._mapper">
            <summary>
            Injected mapper
            </summary>
        </member>
        <member name="M:Task.Services.HotelsService.#ctor(BusinessLayer.DataContext,AutoMapper.IMapper)">
            <summary>
            Hotels service consturctor
            </summary>
            <param name="context">Injected context service</param>
            <param name="mapper">Injected mapper</param>
        </member>
        <member name="M:Task.Services.HotelsService.GetHotels(System.Double,System.Double)">
            <summary>
            Gets Hotels items
            </summary>
            <param name="myLongitude">User Longitude</param>
            <param name="myLatitude">User Latitude</param>
            <returns>Service response with list of Hotels items</returns>
        </member>
        <member name="M:Task.Services.HotelsService.GetHotel(System.Int32)">
            <summary>
            Gets single Hotel
            </summary>
            <param name="id">Hotels Id</param>
            <returns>Hotels item</returns>
        </member>
        <member name="M:Task.Services.HotelsService.InsertHotelItem(System.String,System.Double,System.Double,System.Double,System.Nullable{System.Int32})">
            <summary>
            Inserts new Hotels in table
            </summary>
            <param name="name">Name of the Hotel</param>
            <param name="price">Price of hotel</param>
            <param name="longitude">Hotel Longitude</param>
            <param name="latitude">Hotel Latitude</param>
            <param name="addressId">Address Id</param>
            <returns>Inserted HotelItem</returns>
        </member>
        <member name="M:Task.Services.HotelsService.UpdateHotelItem(System.Int32,System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
            <summary>
            Update Hotel in table
            </summary>
            <param name="id">Hotel Id</param>
            <param name="name">Name of the Hotel</param>
            <param name="price">Price of hotel</param>
            <param name="longitude">Hotel Longitude</param>
            <param name="latitude">Hotel Latitude</param>
            <param name="addressId">Address Id</param>
            <returns>Updated HotelItem</returns>
        </member>
        <member name="M:Task.Services.HotelsService.DeleteHotelItem(System.Int32)">
            <summary>
            Delete Hotel in table
            </summary>
            <param name="id">Hotel Id</param>
            <returns>Data weather action is successful</returns>
        </member>
        <member name="M:Task.Services.HotelsService.CheckItemForInsert(System.String,System.Double,System.Double,System.Double,System.Nullable{System.Int32})">
            <summary>
            Checks data validity
            </summary>
            <param name="name">Name of the Hotel</param>
            <param name="price">Price of hotel</param>
            <param name="longitude">Hotel Longitude</param>
            <param name="latitude">Hotel Latitude</param>
            <param name="addressId">Address Id</param>
            <returns></returns>
        </member>
        <member name="M:Task.Services.HotelsService.CalculateDistance(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculate distance of two locations
            </summary>
            <param name="longitudeMylocation">User Longitude</param>
            <param name="latitudeMyLocation">User Latitude</param>
            <param name="longitude">Hotel longitude</param>
            <param name="latitude">Hotel latitude</param>
            <returns>Distance</returns>
        </member>
        <member name="T:Task.Services.IAddressService">
            <summary>
            Hotels service
            </summary>
        </member>
        <member name="M:Task.Services.IAddressService.GetAddress">
            <summary>
            Gets Addresses
            </summary>
            <returns>Addresses item</returns>
        </member>
        <member name="M:Task.Services.IAddressService.GetAddress(System.Int32)">
            <summary>
            Gets Address
            </summary>
            <param name="id">Address Id</param>
            <returns>Address item</returns>
        </member>
        <member name="M:Task.Services.IAddressService.InsertAddressItem(System.String,System.String,System.String,System.String)">
            <summary>
            Inserts new Address in table
            </summary>
            <param name="street">Street</param>
            <param name="number">Number</param>
            <param name="zipCode">Zipcode</param>
            <param name="city">City</param>
            <returns>Inserted Address</returns>
        </member>
        <member name="M:Task.Services.IAddressService.UpdateAddresItem(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Update addresss in table
            </summary>
            <param name="id">address Id</param>
            <param name="street">Street</param>
            <param name="number">Number</param>
            <param name="zipCode">Zipcode</param>
            <param name="city">City</param>
            <returns>Updated address item</returns>
        </member>
        <member name="M:Task.Services.IAddressService.DeleteAddressItem(System.Int32)">
            <summary>
            Delete address in table
            </summary>
            <param name="id">address Id</param>
            <returns>Data weather action is successful</returns>
        </member>
        <member name="T:Task.Services.IHotelsService">
            <summary>
            Hotels service
            </summary>
        </member>
        <member name="M:Task.Services.IHotelsService.GetHotels(System.Double,System.Double)">
            <summary>
            Gets Hotels items
            </summary>
            <param name="myLongitude">User Longitude</param>
            <param name="myLatitude">User Latitude</param>
            <returns>Service response with list of Hotels items</returns>
        </member>
        <member name="M:Task.Services.IHotelsService.GetHotel(System.Int32)">
            <summary>
            Gets single Hotel
            </summary>
            <param name="id">Hotels Id</param>
            <returns>Hotels item</returns>
        </member>
        <member name="M:Task.Services.IHotelsService.InsertHotelItem(System.String,System.Double,System.Double,System.Double,System.Nullable{System.Int32})">
            <summary>
            Inserts new Hotels in table
            </summary>
            <param name="name">Name of the Hotel</param>
            <param name="price">Price of hotel</param>
            <param name="longitude">Hotel Longitude</param>
            <param name="latitude">Hotel Latitude</param>
            <param name="addressId">Address Id</param>
            <returns>Inserted HotelItem</returns>
        </member>
        <member name="M:Task.Services.IHotelsService.UpdateHotelItem(System.Int32,System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
            <summary>
            Update Hotel in table
            </summary>
            <param name="id">Hotel Id</param>
            <param name="name">Name of the Hotel</param>
            <param name="price">Price of hotel</param>
            <param name="longitude">Hotel Longitude</param>
            <param name="latitude">Hotel Latitude</param>
            <param name="addressId">Address Id</param>
            <returns>Updated HotelItem</returns>
        </member>
        <member name="M:Task.Services.IHotelsService.DeleteHotelItem(System.Int32)">
            <summary>
            Delete Hotel in table
            </summary>
            <param name="id">Hotel Id</param>
            <returns>Data weather action is successful</returns>
        </member>
        <member name="T:Task.Services.IUserService">
            <summary>
            Hotels service
            </summary>
        </member>
        <member name="M:Task.Services.IUserService.Login(System.String,System.String)">
            <summary>
            User login
            </summary>
            <param name="username">Username</param>
            <param name="password">Password</param>
            <returns>User Token</returns>
        </member>
        <member name="T:Task.Services.UserService">
            <summary>
            User service
            </summary>
        </member>
        <member name="F:Task.Services.UserService._context">
            <summary>
            Injected context
            </summary>
        </member>
        <member name="F:Task.Services.UserService._mapper">
            <summary>
            Injected mapper
            </summary>
        </member>
        <member name="M:Task.Services.UserService.#ctor(BusinessLayer.DataContext,AutoMapper.IMapper)">
            <summary>
            Hotels service consturctor
            </summary>
            <param name="context">Injected context service</param>
            <param name="mapper">Injected mapper</param>
        </member>
        <member name="M:Task.Services.UserService.Login(System.String,System.String)">
            <summary>
            User login
            </summary>
            <param name="username">Username</param>
            <param name="password">Password</param>
            <returns>User Token</returns>
        </member>
        <member name="P:ServiceResponse`1.Data">
            <summary>
            Response data
            </summary>
        </member>
        <member name="P:ServiceResponse`1.Success">
            <summary>
            Bolean representing where the action is succesfull
            </summary>
        </member>
        <member name="P:ServiceResponse`1.Message">
            <summary>
            Error messages
            </summary>
        </member>
    </members>
</doc>
